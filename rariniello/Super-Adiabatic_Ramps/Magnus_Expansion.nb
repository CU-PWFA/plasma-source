(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    240546,       5003]
NotebookOptionsPosition[    237979,       4917]
NotebookOutlinePosition[    238318,       4932]
CellTagsIndexPosition[    238275,       4929]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Assumptions", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", ">", "0"}], ",", 
     RowBox[{"t", ">", "0"}], ",", 
     RowBox[{"k\[Beta]", ">", "0"}], ",", 
     RowBox[{"s", ">", "0"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.743971113276128*^9, 3.743971137283848*^9}, {
  3.744038820949398*^9, 3.7440388218542347`*^9}, {3.745263040947639*^9, 
  3.7452630467793922`*^9}, {3.749298333214003*^9, 3.749298336237981*^9}}],

Cell["\<\
The Magnus expansion allows the calculation of a transfer matrix for our \
differential equation using a series expansion in terms of commutators of the \
matrix initial value problem.\
\>", "Text",
 CellChangeTimes->{{3.743852899369452*^9, 3.743852939656351*^9}, {
  3.74385298065711*^9, 3.743853047712633*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Commutator", "[", 
    RowBox[{"A1_", ",", "A2_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"A1", ".", "A2"}], "-", 
    RowBox[{"A2", ".", "A1"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", "t_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"k\[Beta]", "[", "t", "]"}], "2"]}], ",", "0"}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalOmega]1", "[", "t_", "]"}], ":=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "t"], 
    RowBox[{
     RowBox[{"A", "[", "\[Xi]", "]"}], " ", 
     RowBox[{"\[DifferentialD]", "\[Xi]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalOmega]2", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "t"], " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "\[Xi]1"], " ", 
      RowBox[{
       RowBox[{"Commutator", "[", 
        RowBox[{
         RowBox[{"A", "[", "\[Xi]2", "]"}], ",", 
         RowBox[{"A", "[", "\[Xi]1", "]"}]}], "]"}], " ", 
       RowBox[{"\[DifferentialD]", "\[Xi]2"}], " ", 
       RowBox[{"\[DifferentialD]", "\[Xi]1"}]}]}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalOmega]31", "[", "t_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "t"], " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Xi]1"], " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "\[Xi]1"], " ", 
      RowBox[{
       RowBox[{"Commutator", "[", 
        RowBox[{
         RowBox[{"A", "[", "\[Xi]3", "]"}], ",", 
         RowBox[{"Commutator", "[", 
          RowBox[{
           RowBox[{"A", "[", "\[Xi]2", "]"}], ",", 
           RowBox[{"A", "[", "\[Xi]1", "]"}]}], "]"}]}], "]"}], " ", 
       RowBox[{"\[DifferentialD]", "\[Xi]3"}], " ", 
       RowBox[{"\[DifferentialD]", "\[Xi]2"}], " ", 
       RowBox[{
       "\[DifferentialD]", "\[Xi]1"}]}]}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalOmega]32", "[", "t_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "t"], " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Xi]1"], " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "\[Xi]2"], " ", 
      RowBox[{
       RowBox[{"Commutator", "[", 
        RowBox[{
         RowBox[{"Commutator", "[", 
          RowBox[{
           RowBox[{"A", "[", "\[Xi]3", "]"}], ",", 
           RowBox[{"A", "[", "\[Xi]2", "]"}]}], "]"}], ",", 
         RowBox[{"A", "[", "\[Xi]1", "]"}]}], "]"}], " ", 
       RowBox[{"\[DifferentialD]", "\[Xi]3"}], " ", 
       RowBox[{"\[DifferentialD]", "\[Xi]2"}], " ", 
       RowBox[{
       "\[DifferentialD]", "\[Xi]1"}]}]}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalOmega]31", "[", "t", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalOmega]32", "[", "t", "]"}]}], "Input",
 CellChangeTimes->{{3.7438528887978687`*^9, 3.743852891193412*^9}, {
   3.743853068041114*^9, 3.743853290760416*^9}, {3.743853334816806*^9, 
   3.743853474375374*^9}, 3.744039937921809*^9, {3.744374668497231*^9, 
   3.74437470408747*^9}, {3.7443754867238407`*^9, 3.744375501756029*^9}, {
   3.744375661242989*^9, 3.7443757528918*^9}, {3.744375879450489*^9, 
   3.744375948481476*^9}, {3.7443759895453997`*^9, 3.744376000019867*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "t"], 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "\[Xi]1"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"k\[Beta]", "[", "\[Xi]1", "]"}], "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"k\[Beta]", "[", "\[Xi]2", "]"}], "2"]}], ")"}], 
         RowBox[{"\[DifferentialD]", "\[Xi]2"}], 
         RowBox[{"\[DifferentialD]", "\[Xi]1"}]}]}]}]}], ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "t"], 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "\[Xi]1"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"k\[Beta]", "[", "\[Xi]1", "]"}], "2"], "-", 
           SuperscriptBox[
            RowBox[{"k\[Beta]", "[", "\[Xi]2", "]"}], "2"]}], ")"}], 
         RowBox[{"\[DifferentialD]", "\[Xi]2"}], 
         RowBox[{"\[DifferentialD]", "\[Xi]1"}]}]}]}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.743853475831929*^9, 3.7439700142993193`*^9, {3.7439711271790733`*^9, 
   3.7439711422808237`*^9}, 3.744038829398032*^9, 3.744038978063236*^9, 
   3.7440390335055437`*^9, 3.7440390694553833`*^9, 3.744039897324177*^9, {
   3.744040069447032*^9, 3.7440400852496*^9}, {3.744375938085792*^9, 
   3.744375949471724*^9}, {3.744376001414344*^9, 3.744376021111909*^9}, 
   3.744386887381926*^9, 3.745251456927393*^9, 3.7452519602494926`*^9, 
   3.745263050335855*^9, 3.7474108366101027`*^9, 3.747410874524683*^9, 
   3.749297442752366*^9, 3.749298342069912*^9, 3.749305422273531*^9, 
   3.7493060950081367`*^9, 3.749322409194151*^9, 3.749323592720497*^9, 
   3.7504514801471863`*^9, 3.750539217270095*^9, 3.7505395220352592`*^9, 
   3.7505396436368017`*^9, 3.750540192825293*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      FractionBox["1", "12"], " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "t"], 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "\[Xi]1"], 
        RowBox[{
         RowBox[{"\[Xi]1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"k\[Beta]", "[", "\[Xi]1", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"k\[Beta]", "[", "\[Xi]2", "]"}], "2"]}]}], ")"}]}], 
         RowBox[{"\[DifferentialD]", "\[Xi]2"}], 
         RowBox[{"\[DifferentialD]", "\[Xi]1"}]}]}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "12"], " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "t"], 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "\[Xi]1"], 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "\[Xi]1"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"k\[Beta]", "[", "\[Xi]1", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"k\[Beta]", "[", "\[Xi]3", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"k\[Beta]", "[", "\[Xi]2", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"k\[Beta]", "[", "\[Xi]3", "]"}], "2"]}]}], ")"}], 
          RowBox[{"\[DifferentialD]", "\[Xi]3"}], 
          RowBox[{"\[DifferentialD]", "\[Xi]2"}], 
          RowBox[{"\[DifferentialD]", "\[Xi]1"}]}]}]}]}]}], ",", "0"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.743853475831929*^9, 3.7439700142993193`*^9, {3.7439711271790733`*^9, 
   3.7439711422808237`*^9}, 3.744038829398032*^9, 3.744038978063236*^9, 
   3.7440390335055437`*^9, 3.7440390694553833`*^9, 3.744039897324177*^9, {
   3.744040069447032*^9, 3.7440400852496*^9}, {3.744375938085792*^9, 
   3.744375949471724*^9}, {3.744376001414344*^9, 3.744376021111909*^9}, 
   3.744386887381926*^9, 3.745251456927393*^9, 3.7452519602494926`*^9, 
   3.745263050335855*^9, 3.7474108366101027`*^9, 3.747410874524683*^9, 
   3.749297442752366*^9, 3.749298342069912*^9, 3.749305422273531*^9, 
   3.7493060950081367`*^9, 3.749322409194151*^9, 3.749323592720497*^9, 
   3.7504514801471863`*^9, 3.750539217270095*^9, 3.7505395220352592`*^9, 
   3.7505396436368017`*^9, 3.750540193019102*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "t"], 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "\[Xi]1"], 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "\[Xi]2"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SuperscriptBox[
              RowBox[{"k\[Beta]", "[", "\[Xi]2", "]"}], "2"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"k\[Beta]", "[", "\[Xi]3", "]"}], "2"]}]}], ")"}], 
          RowBox[{"\[DifferentialD]", "\[Xi]3"}], 
          RowBox[{"\[DifferentialD]", "\[Xi]2"}], 
          RowBox[{"\[DifferentialD]", "\[Xi]1"}]}]}]}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "t"], 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "\[Xi]1"], 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "\[Xi]2"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SuperscriptBox[
              RowBox[{"k\[Beta]", "[", "\[Xi]1", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"k\[Beta]", "[", "\[Xi]2", "]"}], "2"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"k\[Beta]", "[", "\[Xi]1", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"k\[Beta]", "[", "\[Xi]3", "]"}], "2"]}]}], ")"}], 
          RowBox[{"\[DifferentialD]", "\[Xi]3"}], 
          RowBox[{"\[DifferentialD]", "\[Xi]2"}], 
          RowBox[{"\[DifferentialD]", "\[Xi]1"}]}]}]}]}]}], ",", "0"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.743853475831929*^9, 3.7439700142993193`*^9, {3.7439711271790733`*^9, 
   3.7439711422808237`*^9}, 3.744038829398032*^9, 3.744038978063236*^9, 
   3.7440390335055437`*^9, 3.7440390694553833`*^9, 3.744039897324177*^9, {
   3.744040069447032*^9, 3.7440400852496*^9}, {3.744375938085792*^9, 
   3.744375949471724*^9}, {3.744376001414344*^9, 3.744376021111909*^9}, 
   3.744386887381926*^9, 3.745251456927393*^9, 3.7452519602494926`*^9, 
   3.745263050335855*^9, 3.7474108366101027`*^9, 3.747410874524683*^9, 
   3.749297442752366*^9, 3.749298342069912*^9, 3.749305422273531*^9, 
   3.7493060950081367`*^9, 3.749322409194151*^9, 3.749323592720497*^9, 
   3.7504514801471863`*^9, 3.750539217270095*^9, 3.7505395220352592`*^9, 
   3.7505396436368017`*^9, 3.750540193189865*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "The", " ", "transfer", " ", "matrix", " ", "is", " ", "given", " ", "by", 
    " ", 
    RowBox[{"MatrixExp", "[", 
     RowBox[{
      RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "+", 
      RowBox[{"\[CapitalOmega]2", "[", "t", "]"}]}], "]"}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7438536731272717`*^9, 3.74385368631153*^9}, {
  3.743853723405552*^9, 3.743853728691203*^9}, {3.7438538124448423`*^9, 
  3.743853818205881*^9}, {3.74396999286911*^9, 3.743970008820319*^9}}],

Cell["\<\
The general version for the first two terms in the expansion isn\
\[CloseCurlyQuote]t very enlightening but if the integrals can be evaluated \
explicitly then it might prove useful. The first case is of course the \
uniform plasma density. Clearly, all the commutators go to zero so only the \
first term in the Magnus expansion remains.\
\>", "Text",
 CellChangeTimes->{{3.743970020051103*^9, 3.7439700435040092`*^9}, {
  3.743970077123317*^9, 3.743970089650874*^9}, {3.743970742294738*^9, 
  3.7439707581424847`*^9}, {3.743970846365847*^9, 3.743970886141933*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"k\[Beta]", "[", "t_", "]"}], "=", "k"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"MatrixExp", "[", 
   RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.743970763565098*^9, 3.743970841942094*^9}, {
  3.743970896830159*^9, 3.743970934037422*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "t"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["k", "2"]}], " ", "t"}], ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.743970833942519*^9, {3.7439708888352003`*^9, 3.7439709352735777`*^9}, {
   3.74397112724229*^9, 3.743971142433844*^9}, 3.744038829429379*^9, 
   3.7440389781015663`*^9, 3.7440390335418243`*^9, 3.74403906948827*^9, 
   3.7440398973641453`*^9, {3.7440400694797564`*^9, 3.744040085278838*^9}, 
   3.744375938117629*^9, 3.7443760610311728`*^9, 3.7443868876333303`*^9, 
   3.745251457179625*^9, 3.745251960524563*^9, 3.7452630506738567`*^9, 
   3.747410837066964*^9, 3.747410875045146*^9, 3.749297443187757*^9, 
   3.749298342456709*^9, 3.749305422841432*^9, 3.749306095430128*^9, 
   3.74932240978179*^9, 3.749323593240828*^9, 3.7504514804895163`*^9, 
   3.750539217830868*^9, 3.750539522546228*^9, 3.750539646341658*^9, 
   3.750540195214036*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"k", " ", "t"}], "]"}], ",", 
     FractionBox[
      RowBox[{"Sin", "[", 
       RowBox[{"k", " ", "t"}], "]"}], "k"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "k"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"k", " ", "t"}], "]"}]}], ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"k", " ", "t"}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.743970833942519*^9, {3.7439708888352003`*^9, 3.7439709352735777`*^9}, {
   3.74397112724229*^9, 3.743971142433844*^9}, 3.744038829429379*^9, 
   3.7440389781015663`*^9, 3.7440390335418243`*^9, 3.74403906948827*^9, 
   3.7440398973641453`*^9, {3.7440400694797564`*^9, 3.744040085278838*^9}, 
   3.744375938117629*^9, 3.7443760610311728`*^9, 3.7443868876333303`*^9, 
   3.745251457179625*^9, 3.745251960524563*^9, 3.7452630506738567`*^9, 
   3.747410837066964*^9, 3.747410875045146*^9, 3.749297443187757*^9, 
   3.749298342456709*^9, 3.749305422841432*^9, 3.749306095430128*^9, 
   3.74932240978179*^9, 3.749323593240828*^9, 3.7504514804895163`*^9, 
   3.750539217830868*^9, 3.750539522546228*^9, 3.750539646341658*^9, 
   3.7505401952692833`*^9}]
}, Open  ]],

Cell["Lets compare to a ramp with an exact solution.", "Text",
 CellChangeTimes->{{3.7439709525802507`*^9, 3.743971014916245*^9}, {
  3.744039523741473*^9, 3.7440395317734947`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"k\[Beta]", "[", "t_", "]"}], "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"a", " ", "t"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol1", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"MatrixExp", "[", 
     RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol2", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"MatrixExp", "[", 
     RowBox[{
      RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "+", 
      RowBox[{"\[CapitalOmega]2", "[", "t", "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol3", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"MatrixExp", "[", 
     RowBox[{
      RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "+", 
      RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "+", 
      RowBox[{"\[CapitalOmega]31", "[", "t", "]"}], "+", 
      RowBox[{"\[CapitalOmega]32", "[", "t", "]"}]}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.743971020102215*^9, 3.74397107466903*^9}, {
   3.7439711495641203`*^9, 3.743971149901754*^9}, {3.743971211699272*^9, 
   3.743971238715148*^9}, {3.743971404866726*^9, 3.743971405601677*^9}, {
   3.7440387797658167`*^9, 3.744038790917632*^9}, {3.7440389491359158`*^9, 
   3.744038952317574*^9}, {3.744039027824432*^9, 3.74403903007747*^9}, {
   3.7440395362096367`*^9, 3.744039536623006*^9}, {3.744039930649638*^9, 
   3.744039933042964*^9}, {3.744040056760083*^9, 3.744040082159802*^9}, {
   3.744376196178442*^9, 3.744376200626492*^9}, {3.744376232125235*^9, 
   3.744376274563425*^9}, {3.7493054103117037`*^9, 3.7493054188227367`*^9}, {
   3.7493059590746737`*^9, 3.749305960468094*^9}, 3.749305993197048*^9, {
   3.750539824932671*^9, 3.7505398434063377`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "t"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["t", 
       RowBox[{"1", "+", 
        RowBox[{"a", " ", "t"}]}]]}], ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.743971076228023*^9, {3.7439711275712214`*^9, 3.743971150787641*^9}, {
   3.743971218784751*^9, 3.743971240029324*^9}, 3.743971481829628*^9, 
   3.7440387921429462`*^9, 3.744038829604731*^9, {3.744038953748816*^9, 
   3.7440389784256487`*^9}, 3.7440390337214737`*^9, 3.7440390696646633`*^9, 
   3.744039897544258*^9, {3.744040069809289*^9, 3.744040085437168*^9}, 
   3.744375938268346*^9, {3.7443761766320457`*^9, 3.744376204641762*^9}, 
   3.744376358073873*^9, 3.744386887806129*^9, 3.745251457355438*^9, 
   3.745251960679302*^9, 3.745263050873096*^9, 3.747410837319315*^9, 
   3.74741087527766*^9, 3.749297443473319*^9, 3.74929834269093*^9, 
   3.749305423122674*^9, 3.749305962896213*^9, 3.7493060956600323`*^9, 
   3.749322410076655*^9, 3.749323593495326*^9, 3.75045148070117*^9, 
   3.750539218139526*^9, 3.750539303881369*^9, 3.750539522840103*^9, 
   3.750539648763125*^9, 3.75053982576366*^9, 3.750539878333294*^9, 
   3.7505401973544493`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        FractionBox[
         RowBox[{"a", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{"a", " ", "t"}]}], ")"}]}], 
         RowBox[{"1", "+", 
          RowBox[{"a", " ", "t"}]}]], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", 
          RowBox[{"1", "+", 
           RowBox[{"a", " ", "t"}]}], "]"}]}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["a", "2"]}]]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{
       FractionBox[
        RowBox[{"a", " ", "t", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"a", " ", "t"}]}], ")"}]}], 
        RowBox[{"1", "+", 
         RowBox[{"a", " ", "t"}]}]], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", 
         RowBox[{"1", "+", 
          RowBox[{"a", " ", "t"}]}], "]"}]}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.743971076228023*^9, {3.7439711275712214`*^9, 3.743971150787641*^9}, {
   3.743971218784751*^9, 3.743971240029324*^9}, 3.743971481829628*^9, 
   3.7440387921429462`*^9, 3.744038829604731*^9, {3.744038953748816*^9, 
   3.7440389784256487`*^9}, 3.7440390337214737`*^9, 3.7440390696646633`*^9, 
   3.744039897544258*^9, {3.744040069809289*^9, 3.744040085437168*^9}, 
   3.744375938268346*^9, {3.7443761766320457`*^9, 3.744376204641762*^9}, 
   3.744376358073873*^9, 3.744386887806129*^9, 3.745251457355438*^9, 
   3.745251960679302*^9, 3.745263050873096*^9, 3.747410837319315*^9, 
   3.74741087527766*^9, 3.749297443473319*^9, 3.74929834269093*^9, 
   3.749305423122674*^9, 3.749305962896213*^9, 3.7493060956600323`*^9, 
   3.749322410076655*^9, 3.749323593495326*^9, 3.75045148070117*^9, 
   3.750539218139526*^9, 3.750539303881369*^9, 3.750539522840103*^9, 
   3.750539648763125*^9, 3.75053982576366*^9, 3.750539878333294*^9, 
   3.750540198059026*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "23.08"}], ",", "19.38"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rep", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"t", "->", "s"}], ",", 
     RowBox[{"a", "\[Rule]", ".1"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x1", "[", "s_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"sol1", ".", "x0"}], ")"}], "/.", "rep"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x2", "[", "s_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"sol2", ".", "x0"}], ")"}], "/.", "rep"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x3", "[", "s_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"sol3", ".", "x0"}], ")"}], "/.", "rep"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]0", "=", "1."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]0", "=", 
   RowBox[{"-", ".01"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]0", "=", 
   FractionBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Alpha]0", "2"]}], "\[Beta]0"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]m0", "=", 
   RowBox[{
    RowBox[{"-", "a"}], "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c1", "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[Alpha]0", "-", 
         RowBox[{"\[Alpha]m0", " ", "\[Beta]0"}]}], ")"}], "2"], "+", "1"}], 
     RowBox[{"2", " ", "\[Beta]0", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Alpha]m0", "2"], "-", "1"}], ")"}]}]], "+", 
    FractionBox["\[Beta]0", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c2", "=", 
   FractionBox[
    RowBox[{"\[Alpha]0", "-", 
     RowBox[{"\[Alpha]m0", " ", "\[Beta]0"}]}], 
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox["\[Alpha]m0", "2"]}]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c0", "=", 
   SqrtBox[
    RowBox[{
     SuperscriptBox["c1", "2"], "+", 
     SuperscriptBox["c2", "2"], "+", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[Alpha]m0", "2"]}], ")"}]}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "s_", "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", "\[Alpha]m0"}]], " ", 
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox["\[Alpha]m0", "2"]}]], " ", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "/", 
      RowBox[{"k\[Beta]", "[", "s", "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]a", "[", "s_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"k\[Beta]", "[", "s", "]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"c0", "+", 
        RowBox[{"c1", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"\[CapitalPhi]", "[", "s", "]"}]}], "]"}]}], "+", 
        RowBox[{"c2", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           RowBox[{"\[CapitalPhi]", "[", "s", "]"}]}], "]"}]}]}], ")"}]}], 
     ")"}], "/.", "rep"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]1", "[", "s_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"sol1", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], "2"], " ", "\[Beta]0"}],
       "-", 
      RowBox[{"2", " ", 
       RowBox[{"sol1", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
       RowBox[{"sol1", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", "\[Alpha]0"}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"sol1", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}], "2"], " ", "\[Gamma]0"}]}], 
     ")"}], "/.", "rep"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]2", "[", "s_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"sol2", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], "2"], " ", "\[Beta]0"}],
       "-", 
      RowBox[{"2", " ", 
       RowBox[{"sol2", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
       RowBox[{"sol2", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", "\[Alpha]0"}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"sol2", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}], "2"], " ", "\[Gamma]0"}]}], 
     ")"}], "/.", "rep"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]3", "[", "s_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"sol3", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], "2"], " ", "\[Beta]0"}],
       "-", 
      RowBox[{"2", " ", 
       RowBox[{"sol3", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
       RowBox[{"sol3", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", "\[Alpha]0"}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"sol3", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}], "2"], " ", "\[Gamma]0"}]}], 
     ")"}], "/.", "rep"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x1", "[", "s", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "0.1", ",", "80"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Beta]a", "[", "s", "]"}], ",", 
     RowBox[{"\[Beta]1", "[", "s", "]"}], ",", 
     RowBox[{"\[Beta]2", "[", "s", "]"}], ",", 
     RowBox[{"\[Beta]3", "[", "s", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "0.1", ",", "25"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "25"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "16"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<s\>\"", ",", " ", "\"\<\[Beta]\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Magnus Expansion\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Exact\>\"", ",", "\"\<1\>\"", ",", "\"\<2\>\"", ",", "\"\<3\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzU0ow2EAx/F5OXjJNi+J1bzlYJLNawtp/9nBS3mZC3MjdlDbOCxCJpTX
g5d5T1IcENpJWHm7TJrLDKW8zDL+ZpSa9zy/5/Dtc/zG12qV9b4cDkdIgvoK
ZQDPyTLH0rl0GHmtnkkittWMUhcHVFYxUTGodcMt8/sPfAn8ojpunTwJsX8y
NBwm2rzRUPAaJ4SFqp4EOGAMzofb+0I55FsMJTBvc6wM3qyYKmHL3lA1VDqy
W2DsricwjVh1xA+BC/vDOzbiVcSIBaoVh/eX+MiaXLBhyvkMpWauFxaLvFzD
A8tknvbxoC6roxQKJF3UMLmgeZ5lGfu5iJrrcOmh9feTqhNddOd6WOapKLUX
Stb/jFATJp6EQXVBq/BVI9+AcwGdtgKiPaePanrMkCmI1mAP1c+9ltD4xjLi
gw3qiaz/w0j8WhqkZrqm/SaI5WsP1Ki7YT6c8h+nLqd8xEDT7Fks/M5vTYZa
n3bqPzZQAnY=
  "]],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
+zDnk5RwLZhzuBO9L40E8vR3o5XHtOCGQyXX3CUShKg40CRTtYBTgY9cnUPC
4npdnpCtBbrVgv6V+STg+EgXmLyuBUufVdOHi0ngeL8tzPW+FigsvBVyKiVB
XhrlfUOjFoQzz277XUaC8b3NRuodWnB37yu5j+UkMALIuvBJC3rmRxwXbpEg
XqZxeWVcC+LTOSTpt0nwesnaK3BJC/54S3/uw9Yl3tU3tLNrw1+3t1w3sP2B
t8wVTUW0wSwqXKASs3/39MOThXLawHFzYP/8dRKs+Rp/49HWBtP0k9cjMf/o
Fvdph8y1YZ+wNdkQ8z9TbPutzxRtuHnPrl8Pi29oukKA4oLt72Fs2o/F76Xo
VNnmh82ldyqLPTF+up3nHRkHtKHRJJ7jOsafY+Llufaj2pDa61JHPUGCV7Wm
GY6J2rC3Ts6ddIQElImPxh8uaoO4s8yh3FASNMrG9bgWaEPcwOtbdrtJUJ3Q
KOVZqw1W1yzZnzuSQPfBrsf9zdowOP0iKo1MgrIxDh+/d9ogk3qh6p45Ca4y
bYt2/9AG9f863CUVMD5OTMD4kjbw+0iAF6avi3fTRoLZdWBNXnNynR3Lt/h7
tXAZHShODakIGSXCBi3yxZy6DiDJN0GmXUSIiRXff9hYBxYpoLWnmQhhXz0q
Yux1QMsp1Xy+kAg7yoeNTsfrwNLv6o4RFhHefz7dvSlNBxxS9EbHrYnAFFKP
TsnRAec9w3t2qBMBHxlSf/6eDjzhK6k8tgqggVskXBnRgZmZvay1KwDXwrOG
ZWZ1IGKnYlHMfwByJeanC/7qwJfV5hfBewFEuY+3XRPXBZJ1h/qt7Vi9vuNy
qKTpwrcr215nHiPA690SXs23dWH9/J9ai9M2QMmu+0t5pIvNJ8ZfX2Lzc+NL
r4IXLbowbbv8IugvDh7oFQ11DOhCHLHkxMBBHOQvawR9FNaDPfnqH6cdrCE8
zTJqOlIPSh+c6BIftgD8g4vEEwl6cGE+49jvFAsQ6v8uLJyuB22pLpT57RZQ
oZ19a/stPbhivMeMeMwcJl4tfI0c1IPUl1nXa3jMYA9vBWPVTh8eGN7YSv9r
BJ5JCorcatuh9lJodvIHTbjWxD524YABFr+upJD4WlPJf4Spb4cMwMJw1787
geyomHBi3jLGAIIVL08/eMyFCppW1kcTDQAd5bBOCRZAV5pmJSwKDUCpe/we
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
VOevInv4H8AKcWk=
       "]]},
     Annotation[#, "Charting`Private`Tag$575200#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.1, 80}, {-58.26485817728556, 57.24968945043323}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.743971471274508*^9, 3.743971612910487*^9}, {
   3.743971652373683*^9, 3.743971733792905*^9}, {3.744038667540275*^9, 
   3.744038711823243*^9}, {3.744038744997011*^9, 3.744038764021576*^9}, 
   3.744038831363164*^9, 3.74403888868416*^9, {3.744038958050922*^9, 
   3.744038981608684*^9}, 3.744039035399192*^9, 3.744039071316393*^9, 
   3.74403914744098*^9, 3.74403949668924*^9, 3.744039569260563*^9, {
   3.744039685861833*^9, 3.744039724360448*^9}, {3.744039755290806*^9, 
   3.744039768361576*^9}, {3.7440398046737347`*^9, 3.7440398187006617`*^9}, {
   3.744039859574423*^9, 3.744039899327636*^9}, {3.744040072296789*^9, 
   3.744040086720088*^9}, {3.74404105312775*^9, 3.744041065309382*^9}, 
   3.7443759394896717`*^9, {3.7443761810665007`*^9, 3.744376209775405*^9}, {
   3.7443763683358097`*^9, 3.744376397659398*^9}, {3.744386884811862*^9, 
   3.744386894010895*^9}, {3.744386931500536*^9, 3.744386951575027*^9}, 
   3.744387001634078*^9, 3.7452514636749353`*^9, 3.745251965195449*^9, 
   3.745263058849362*^9, 3.747410845403304*^9, 3.747410883261477*^9, 
   3.749297450104156*^9, 3.7492983508852243`*^9, 3.7493055004016447`*^9, {
   3.749305538691533*^9, 3.74930555760021*^9}, {3.749305691551386*^9, 
   3.749305722881331*^9}, 3.749306156479329*^9, 3.749322471719686*^9, 
   3.749323274267434*^9, 3.7493236535365677`*^9, 3.750451534697826*^9, 
   3.750539207186132*^9, 3.750539269978466*^9, 3.7505393577365503`*^9, 
   3.7505395762417173`*^9, 3.750539700945427*^9, 3.750539937551654*^9, 
   3.7505402504366493`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
bdso3VyWG/4HXADbBQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$575242#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$575242#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$575242#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, 
         "Charting`Private`Tag$575242#4"]& ]}, {{}, {}, {}, {}, {}, {}}}, {}, \
{}}, {DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"s\"", TraditionalForm], 
       FormBox["\"\[Beta]\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Magnus Expansion\"", TraditionalForm], 
     PlotRange -> {{0, 25}, {0, 16}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Exact\"", "\"1\"", "\"2\"", "\"3\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.743971471274508*^9, 3.743971612910487*^9}, {
   3.743971652373683*^9, 3.743971733792905*^9}, {3.744038667540275*^9, 
   3.744038711823243*^9}, {3.744038744997011*^9, 3.744038764021576*^9}, 
   3.744038831363164*^9, 3.74403888868416*^9, {3.744038958050922*^9, 
   3.744038981608684*^9}, 3.744039035399192*^9, 3.744039071316393*^9, 
   3.74403914744098*^9, 3.74403949668924*^9, 3.744039569260563*^9, {
   3.744039685861833*^9, 3.744039724360448*^9}, {3.744039755290806*^9, 
   3.744039768361576*^9}, {3.7440398046737347`*^9, 3.7440398187006617`*^9}, {
   3.744039859574423*^9, 3.744039899327636*^9}, {3.744040072296789*^9, 
   3.744040086720088*^9}, {3.74404105312775*^9, 3.744041065309382*^9}, 
   3.7443759394896717`*^9, {3.7443761810665007`*^9, 3.744376209775405*^9}, {
   3.7443763683358097`*^9, 3.744376397659398*^9}, {3.744386884811862*^9, 
   3.744386894010895*^9}, {3.744386931500536*^9, 3.744386951575027*^9}, 
   3.744387001634078*^9, 3.7452514636749353`*^9, 3.745251965195449*^9, 
   3.745263058849362*^9, 3.747410845403304*^9, 3.747410883261477*^9, 
   3.749297450104156*^9, 3.7492983508852243`*^9, 3.7493055004016447`*^9, {
   3.749305538691533*^9, 3.74930555760021*^9}, {3.749305691551386*^9, 
   3.749305722881331*^9}, 3.749306156479329*^9, 3.749322471719686*^9, 
   3.749323274267434*^9, 3.7493236535365677`*^9, 3.750451534697826*^9, 
   3.750539207186132*^9, 3.750539269978466*^9, 3.7505393577365503`*^9, 
   3.7505395762417173`*^9, 3.750539700945427*^9, 3.750539937551654*^9, 
   3.750540252712563*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x2", "[", "s", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "0.1", ",", "14"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7505396082091312`*^9, 3.7505396084490223`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
8owByaHaZQdO8Egdo+v9WDMD544dKo44ySMLc35pqr5gwEe94fb2UzwyksZ8
GNbGQJF4At3gNI+4SZtLZbYzwPZiyNDSeKQy0c2rtpOBrIoE/acUzxPeVvCl
i4F+MTXekXQeORwTNyrTzcDlAXErnTM8MjCVzTH9wEDSX+bQC4qd9t9J9Oth
oCB6Stv/LI+U/H7ecbyPAeaLT4NDFMuFfWbe+kTl97h3PDCDR1K/moWJDVL+
4b8p/IFiWf+TNRu/MmD/yent8kweOfWhX6RqiIEux2CHXIqlPU3WSI8wUNPm
xxyk+GRb8oXAnwyoKi6E2jkekVrR+/3+KAMB1SbhThSnNBqZKv5lwLasOmkT
xZK2ifHbxhnAig1+If8/v//h5aMJBuK37ni8meJZJgYL5k1R8ZKbj7pQnHQr
YevOGQZui32OYFIsod1d8ZSfifPzHoZ+oeInXdUVYggxYUP/Z5RDsTgzfuV+
OhMx6mV5VhQfz+46/0KEiQaly5GvqPrE5iz9skicieIGpXOrKT6eesTw4Cwm
VKIGn9RS/RGd1Xm4XYqJtqmdbSoUJxzVer5Elgnb00XJgVR/RQQOK8fJM/F3
gWRtDqVHQuTrgHeK1J5l5Zo9pPQSHtO4pa/ExNE3I41tlL70oZfOvSpMeBRX
u96n9I8PWJRhospE6MB0TzrlD1rPgf6TDCZ+TJy4tY7yj1A7K4qziInBNZ+t
r1B+i125v/GMBhNdH7JOa1F+FHzWrDC8mIkHpfucc4/xiADZU3Jeh4mV5xVl
lsfzSIzps4lRPSa8jz4r3h/LI/y3F9g7GzJhaZ/ScjaGR/gKGz78M2FiX1/c
3dRoHjnEUtFyNafqPZQqGRrJIzM5O/ZdtWRi1NVzyiCCR6ZPK8t42DCRGjl5
N3I3j0RLhvqU2DHh9ChUepqaz6mEh9doDkwY/2yeFRTGI5NRIdblLky4CUcJ
/9nCIxOB93fKuDORktQqOrSeRyJ6ZUnQWiYWzqTdvu7FI/+8AyWIJxP0V8Ki
q9byyLir9JXtvpQe239muVL75K+ZX/uzICYq8iGoYM0je+7cYTC3MpFWMnFY
wJJH/uiIh0ZsY0LWvTymzYRHfrPLhTXCKbbN/8bS5ZFfUnST+ANMrHXZ7xc6
n9LPKnPD7SgmYtfUCrQo8ciCcK2E/oNMBO3eXyGvQO2XtlUd1rFUPvZfN7uK
88iVjNzdM0lMyGgN9yT85ZKaRr1s7RNMNOmvNZP9ySUvJx4/8jnFRIci49rB
b1wy7T0kV5POhJzekwraRy5Zq2Zyc18OExPLd5lXPOGS7aua3hTkMSEQUt6x
jtrvcUd8+TsuUvmkjWx+f5dLbn6KW2lYwAQvilo3xVwiXvhy+OcNJoTYuZ/D
T3HJfb2QxVtrKb9l6TkvXs0lbZtmVp17yMTvAJPjT5245FtaakTjYybENCro
9tZcMmessnHRUyYi6Ja723W4ZEc1Laj/JRMzTT+WLpfgEpZt7mWffiYm79uw
F9RQ991uvaakASY2fNhG21rmQlzzH49WD1LzlZvVmJLvQqJFhqyVqf8K7zaV
E94nXUhn07Ke9j9Uvira3XQ/F5K45qXKSmEWXr7qj7KeciY1cRfsSkRZkL43
MHpv2JkM3w7bJiHBgvyR0jmCH53JSkWpew3SLOzYbOw1WOtMFDucva2UWdhS
QP6TOuJMLqx9fE5vCQu9bifi1k04kZcJaXUnl7IQK3hOb+mgExGq2vR1WJcF
tx0P7jx+7UQClARMrxuxsDKkp1ev1IlodVm+YYKFSwGx7ZMbnUiFV+VshdUs
JN1YPu9hpSMZTDzK2bmGhdp1isLeFx2Jco17YKsHC6NBMVeuJzqSyHl/7iR7
szDxLss6xMeRWHfrutMDWCgaKzvhO+VAmtdfTxvbx4Jvy+ff27QdyHRKRM2a
Ayw4v++TUpFzIDoPHPtvRbFQfo2LvWP2JHXBoH5YDAsxJ1i1Gg/sydqPrFeD
iSzMH//Lt8PJnvRtzJHpymHh1wPbSy9WLCdFDkXy0hdYmJZzhIDucrJr6d3Z
yy+xsNm4yu69zHIiNPVa5WYBCyKSMXmpL+3IwoxZmsdLWXj3YVZPxwo7EvQ8
0tq0joVS1vsvGia2ROf2cbuwRyxMit5KLZC3JeNZGQ759Sy4cgW5D0dsyLHg
cp7sMxb2+cdfbb1sQwqFhjy/vmJhxkg8Wk/MhgyZeu0894mF+rk2cja1VqRc
LXjPi88s5OuL6ZqdsSKRInv307+yYKu4aOPDLVZkVnvqwfBhFqIbgk0OyVoR
7R1PE53GWFidThae8gYJKzC5PCHCRiwufw4qtyB/5Oa89tRiw9ffpDB80Ii0
z696EKfNBi9H5krzLiNyR8OzsFSHjesO3/2l+YzIPs75g3RDNlIfsRfZyhmS
iS2qmjct2IhXKNFgaemT6Vr1g6Ir2BiLXWwc4KxN3jc1Bhu4sqGjUJ7eY7mE
POjY4ua7mo2eRpHKD0u1yKHvRRq3PdgY5/Q/XCGmSQSUdNs2bGDjpftatW15
bEIPM9Go3MFGRqafRGfmHDIQ0SXXt5MNvWxN7yVaiuRJ3IHpWXvY0LbH6a5K
OZKQde/Vpgg2Ig+ez58XM4sE5a+/nxLJhvqkau/EPhGSaCHzNTuajSSbWfxR
VwTJ/wBkvUGI
        "]], LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAqEXRJ1aFJUCgbHe4tNzcv8vcg1Nl
hyVAQAqgeeNbxj+M8sUou4slQMiOWkR3Jvg/Dx5K02aUJUDwC/DylQERQBjM
Wn0VtyVAiy3yhKE/MEAU1jdob7klQJp+hiv1HzFAD+AUU8m7JUCMbIskbgIy
QAb0zih9wCVAzden/eLNM0D0G0PU5MklQOXAUhRffzdA0GsrK7TcJUAO99df
+VA/QMx1CBYO3yVAJAF14/cqQEDHf+UAaOElQCSWPgGurkBAvpOf1hvmJUBP
hhnM1blBQKy7E4KD7yVAqp4DmGDfQ0CJC/zYUgImQL1Nm2beaUhAhBXZw6wE
JkBu2WH1WAFJQIAftq4GByZAfiSlaDyaSUB4M3CEugsmQJotylZK0EpAZlvk
LyIVJkB+PmM82k1NQEKrzIbxJyZA+ZYg8c9IUUD6Sp00kE0mQHwJ6az0KVdA
jAu5+sFPJkBx0uA6s4hXQB/M1MDzUSZArqtR2D/oV0BETQxNV1YmQJbEAM3J
qVhAjk97ZR5fJkAvWA8lzzZaQCFUWZascCZA0xzA1h56XUC0FHVc3nImQOoL
B5+J5l1ARtWQIhB1JkDM2LYs3lNeQGpWyK5zeSZA2Lc+AUwxX0C0WDfHOoIm
QBVm1J63e2BASF0V+MiTJkA4lTD+QlliQNodMb76lSZAIkb+nzmXYkBt3kyE
LJgmQK6po9S01WJAkl+EEJCcJkCTCW0oPVRjQNxh8yhXpSZAvkiyTbNXZEBv
ZtFZ5bYmQIauVEMreWZAlm+NuwHaJkA8CVqWbi5rQEQv5YFi3CZAzY1KfvKF
a0Dx7jxIw94mQJ1W5bM+3mtATG7s1ITjJkAdHOriNpFsQAJtS+4H7SZAswZO
HdcAbkBtagkhDgAnQGi/RwQ1hHBAGiph524CJ0COu7grpLZwQMjpuK3PBCdA
kDDID4bpcEAiaWg6kQknQBr7/fmlUHFA2GfHUxQTJ0DLUVpEciRyQERlhYYa
JidAbNz+ViPjc0DyJN1MeygnQDguxX44HXRAn+Q0E9wqJ0Aul/AU0Vd0QPpj
5J+dLydAs/wFCpHOdECvYkO5IDknQOK/lA9swnVAGmAB7CZMJ0BSPFSTlsR3
QHMYXznkTCdAj96ql0/Zd0DShW/x
        "]], 
       LineBox[{{11.659043507674442`, 389.6093627903458}, {11.72760770938417, 
        456.43803674858833`}, {11.732167641065864`, 461.1955491710746}, {
        11.741287504429252`, 470.8336421475806}, {11.759527231156024`, 
        490.6117791085928}, {11.796006684609573`, 532.2557517585644}, {
        11.800566616291267`, 537.6641458324589}, {11.80512654797296, 
        543.1188910177168}, {11.814246411336347`, 554.1689882605166}, {
        11.832486138063121`, 576.8426681522585}, {11.868965591516668`, 
        624.575255495198}, {11.87352552319836, 630.7736432124726}, {
        11.878085454880054`, 637.0249881703257}, {11.887205318243442`, 
        649.6883250710932}, {11.905445044970214`, 675.6702232534967}, {
        11.941924498423763`, 730.3592392205204}, {11.997667524100615`, 
        822.9356005105573}}]},
      Annotation[#, 
       "Charting`Private`Tag$575481#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.1, 14}, {-61.206432625795514`, 822.9356005105573}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.750539610979761*^9, 3.750539619144534*^9}, 
   3.7505403450957193`*^9}]
}, Open  ]],

Cell["\<\
The lowest order of the Magnus expansion can be calculated exactly. \
\>", "Text",
 CellChangeTimes->{{3.745262833313342*^9, 3.74526286375563*^9}, {
  3.745262905317444*^9, 3.745262906229619*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"k\[Beta]", ",", "\[Beta]0", ",", "\[Alpha]0", ",", "\[Gamma]0"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"MatrixExp", "[", 
    RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "]"}], ",", 
   RowBox[{"k\[Beta]", ">", "0"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.745262925717002*^9, 3.7452630252264967`*^9}, {
  3.745263593421441*^9, 3.7452636016362743`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cosh", "[", 
      SqrtBox[
       RowBox[{"t", " ", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "t"], 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"k\[Beta]", "[", "\[Xi]", "]"}], "2"]}], 
          RowBox[{"\[DifferentialD]", "\[Xi]"}]}]}]}]], "]"}], ",", 
     FractionBox[
      RowBox[{"t", " ", 
       RowBox[{"Sinh", "[", 
        SqrtBox[
         RowBox[{"t", " ", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", "0", "t"], 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"k\[Beta]", "[", "\[Xi]", "]"}], "2"]}], 
            RowBox[{"\[DifferentialD]", "\[Xi]"}]}]}]}]], "]"}]}], 
      SqrtBox[
       RowBox[{"t", " ", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "t"], 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"k\[Beta]", "[", "\[Xi]", "]"}], "2"]}], 
          RowBox[{"\[DifferentialD]", "\[Xi]"}]}]}]}]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SqrtBox[
       FractionBox[
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "t"], 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"k\[Beta]", "[", "\[Xi]", "]"}], "2"]}], 
          RowBox[{"\[DifferentialD]", "\[Xi]"}]}]}], "t"]], " ", 
      RowBox[{"Sinh", "[", 
       SqrtBox[
        RowBox[{"t", " ", 
         RowBox[{
          SubsuperscriptBox["\[Integral]", "0", "t"], 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"k\[Beta]", "[", "\[Xi]", "]"}], "2"]}], 
           RowBox[{"\[DifferentialD]", "\[Xi]"}]}]}]}]], "]"}]}], ",", 
     RowBox[{"Cosh", "[", 
      SqrtBox[
       RowBox[{"t", " ", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "t"], 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"k\[Beta]", "[", "\[Xi]", "]"}], "2"]}], 
          RowBox[{"\[DifferentialD]", "\[Xi]"}]}]}]}]], "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.745262953318779*^9, 3.74526297044011*^9}, 
   3.7452630272014437`*^9, 3.745263059327403*^9, 3.745263603464981*^9, 
   3.74741084617686*^9, 3.74741088386309*^9, 3.749297450714632*^9, 
   3.749298351420987*^9, 3.74930550257143*^9, 3.7493061585439577`*^9, 
   3.749322473925262*^9, 3.749323655820689*^9, 3.750451536807526*^9, 
   3.750539272269966*^9, 3.7505395791343813`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        SqrtBox[
         RowBox[{"s", " ", "I0"}]], "]"}], ",", 
       RowBox[{
        SqrtBox[
         FractionBox["s", "I0"]], " ", 
        RowBox[{"Sin", "[", 
         SqrtBox[
          RowBox[{"s", " ", "I0"}]], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SqrtBox[
          FractionBox["I0", "s"]]}], " ", 
        RowBox[{"Sin", "[", 
         SqrtBox[
          RowBox[{"s", " ", "I0"}]], "]"}]}], ",", 
       RowBox[{"Cos", "[", 
        SqrtBox[
         RowBox[{"s", " ", "I0"}]], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"\[Beta]0", " ", 
    SuperscriptBox[
     RowBox[{"M", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], "2"]}], "-", 
   RowBox[{"2", " ", "\[Alpha]0", " ", 
    RowBox[{"M", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
    RowBox[{"M", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "+", 
   RowBox[{"\[Gamma]0", " ", 
    SuperscriptBox[
     RowBox[{"M", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], "2"]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7452634729918013`*^9, 3.745263668204749*^9}, {
  3.745264134973998*^9, 3.7452641359726257`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]0", " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", 
     SqrtBox[
      RowBox[{"I0", " ", "s"}]], "]"}], "2"]}], "+", 
  FractionBox[
   RowBox[{"s", " ", "\[Gamma]0", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      SqrtBox[
       RowBox[{"I0", " ", "s"}]], "]"}], "2"]}], "I0"], "-", 
  RowBox[{
   SqrtBox[
    FractionBox["s", "I0"]], " ", "\[Alpha]0", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{"I0", " ", "s"}]]}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.7452636578583193`*^9, 3.745263669603359*^9}, 
   3.745264137128598*^9, 3.7474108467875147`*^9, 3.7474108843348007`*^9, 
   3.749297451143824*^9, 3.749298351843725*^9, 3.749305503061466*^9, 
   3.749306158980948*^9, 3.749322474437392*^9, 3.749323656342136*^9, 
   3.7504515372375517`*^9, 3.750539272764659*^9, 3.750539579664418*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigReduce", "[", 
  RowBox[{
   RowBox[{"\[Beta]0", " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", 
      SqrtBox[
       RowBox[{"I0", " ", "s"}]], "]"}], "2"]}], "+", 
   FractionBox[
    RowBox[{"s", " ", "\[Gamma]0", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       SqrtBox[
        RowBox[{"I0", " ", "s"}]], "]"}], "2"]}], "I0"], "-", 
   RowBox[{
    SqrtBox[
     FractionBox["s", "I0"]], " ", "\[Alpha]0", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{"I0", " ", "s"}]]}], "]"}]}]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"I0", " ", "\[Beta]0"}], "+", 
   RowBox[{"s", " ", "\[Gamma]0"}], "+", 
   RowBox[{"I0", " ", "\[Beta]0", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{"I0", " ", "s"}]]}], "]"}]}], "-", 
   RowBox[{"s", " ", "\[Gamma]0", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{"I0", " ", "s"}]]}], "]"}]}], "-", 
   RowBox[{"2", " ", "I0", " ", 
    SqrtBox[
     FractionBox["s", "I0"]], " ", "\[Alpha]0", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{"I0", " ", "s"}]]}], "]"}]}]}], 
  RowBox[{"2", " ", "I0"}]]], "Output",
 CellChangeTimes->{3.745264145665185*^9, 3.747410846862496*^9, 
  3.7474108844860497`*^9, 3.74929745135194*^9, 3.749298351859857*^9, 
  3.7493055032511272`*^9, 3.749306159003673*^9, 3.749322474704884*^9, 
  3.74932365657296*^9, 3.750451537272403*^9, 3.750539272946142*^9, 
  3.7505395798767977`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Up to second order analytically", "Subsubsection",
 CellChangeTimes->{{3.747404336855597*^9, 3.747404337763878*^9}, {
  3.7492974668608503`*^9, 3.749297477518476*^9}}],

Cell["\<\
The first and second term in the expansion can be included and produce a \
reasonably simple analytic solution. The only complicated part is the \
integral in the second term.\
\>", "Text",
 CellChangeTimes->{{3.7492974825263653`*^9, 3.7492975243029013`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"k\[Beta]", "[", "s_", "]"}], ":=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"a", " ", "s"}]}]], ",", 
        RowBox[{"s", "<", 
         RowBox[{"1", "/", "a"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"s", "\[GreaterEqual]", 
         RowBox[{"1", "/", "a"}]}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalOmega]1", "[", "s", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalOmega]2", "[", "s", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalOmega]31", "[", "s", "]"}], "+", 
  RowBox[{"\[CapitalOmega]32", "[", "s", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"det", "[", "s_", "]"}], "=", 
   RowBox[{"Det", "[", 
    RowBox[{
     RowBox[{"\[CapitalOmega]1", "[", "s", "]"}], "+", 
     RowBox[{"\[CapitalOmega]2", "[", "s", "]"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.749297529039469*^9, 3.749297552475321*^9}, {
  3.74929828387325*^9, 3.749298319997726*^9}, {3.749298825668586*^9, 
  3.749298919880045*^9}, {3.749298996085744*^9, 3.749299017198884*^9}, {
  3.749299075245091*^9, 3.749299079180093*^9}, {3.749305213880519*^9, 
  3.7493052688414507`*^9}, {3.749306032891469*^9, 3.749306067415977*^9}, {
  3.7493062114655933`*^9, 3.749306212927738*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "s"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            RowBox[{"-", 
             FractionBox["1", 
              RowBox[{"2", " ", "a"}]]}], 
            RowBox[{
             RowBox[{"a", ">", "0"}], "&&", 
             RowBox[{
              RowBox[{
               FractionBox["1", "a"], "-", "s"}], "<", "0"}]}]},
           {
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "s"}], "+", 
               RowBox[{"a", " ", 
                SuperscriptBox["s", "2"]}]}], ")"}]}], 
            TagBox["True",
             "PiecewiseDefault",
             AutoDelete->True]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7492983226971684`*^9, 3.7492983520569973`*^9}, 
   3.7492985455284357`*^9, 3.74929901956638*^9, 3.749299081315784*^9, 
   3.74929917406367*^9, 3.749303607732502*^9, 3.74930524346341*^9, 
   3.7493052774512177`*^9, 3.7493055037996063`*^9, 3.7493061593854427`*^9, 
   3.74930621553438*^9, 3.749322475267663*^9, 3.749323657167959*^9, 
   3.7504515376272383`*^9, 3.750539273481411*^9, 3.750539580375646*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      RowBox[{"(", 
       TagBox[GridBox[{
          {"\[Piecewise]", GridBox[{
             {
              FractionBox[
               RowBox[{"a", " ", 
                SuperscriptBox["s", "3"]}], "6"], 
              RowBox[{
               RowBox[{
                RowBox[{
                 FractionBox["1", "a"], "-", "s"}], "\[GreaterEqual]", "0"}], 
               "||", 
               RowBox[{"a", "\[LessEqual]", "0"}]}]},
             {
              FractionBox[
               RowBox[{
                RowBox[{"-", "2"}], "+", 
                RowBox[{"3", " ", "a", " ", "s"}]}], 
               RowBox[{"6", " ", 
                SuperscriptBox["a", "2"]}]], 
              TagBox["True",
               "PiecewiseDefault",
               AutoDelete->True]}
            },
            AllowedDimensions->{2, Automatic},
            Editable->True,
            
            GridBoxAlignment->{
             "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.84]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}},
            Selectable->True]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.35]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        "Piecewise",
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True,
        Selectable->False], ")"}]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      RowBox[{"(", 
       TagBox[GridBox[{
          {"\[Piecewise]", GridBox[{
             {
              RowBox[{"-", 
               FractionBox[
                RowBox[{"a", " ", 
                 SuperscriptBox["s", "3"]}], "6"]}], 
              RowBox[{
               RowBox[{
                RowBox[{
                 FractionBox["1", "a"], "-", "s"}], "\[GreaterEqual]", "0"}], 
               "||", 
               RowBox[{"a", "\[LessEqual]", "0"}]}]},
             {
              FractionBox[
               RowBox[{"2", "-", 
                RowBox[{"3", " ", "a", " ", "s"}]}], 
               RowBox[{"6", " ", 
                SuperscriptBox["a", "2"]}]], 
              TagBox["True",
               "PiecewiseDefault",
               AutoDelete->True]}
            },
            AllowedDimensions->{2, Automatic},
            Editable->True,
            
            GridBoxAlignment->{
             "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.84]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}},
            Selectable->True]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.35]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        "Piecewise",
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True,
        Selectable->False], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7492983226971684`*^9, 3.7492983520569973`*^9}, 
   3.7492985455284357`*^9, 3.74929901956638*^9, 3.749299081315784*^9, 
   3.74929917406367*^9, 3.749303607732502*^9, 3.74930524346341*^9, 
   3.7493052774512177`*^9, 3.7493055037996063`*^9, 3.7493061593854427`*^9, 
   3.74930621553438*^9, 3.749322475267663*^9, 3.749323657167959*^9, 
   3.7504515376272383`*^9, 3.750539273481411*^9, 3.750539581760041*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", "12"], " ", 
       RowBox[{"(", 
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {
               RowBox[{"-", 
                FractionBox[
                 RowBox[{"a", " ", 
                  SuperscriptBox["s", "4"]}], "4"]}], 
               RowBox[{
                RowBox[{
                 RowBox[{
                  FractionBox["1", "a"], "-", "s"}], "\[GreaterEqual]", "0"}],
                 "||", 
                RowBox[{"a", "\[LessEqual]", "0"}]}]},
              {
               FractionBox[
                RowBox[{"1", "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["a", "2"], " ", 
                  SuperscriptBox["s", "2"]}]}], 
                RowBox[{"4", " ", 
                 SuperscriptBox["a", "3"]}]], 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{1.}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}},
             Selectable->True]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {
               FractionBox[
                RowBox[{"a", " ", 
                 SuperscriptBox["s", "4"]}], "12"], 
               RowBox[{
                RowBox[{
                 RowBox[{
                  FractionBox["1", "a"], "-", "s"}], "\[GreaterEqual]", "0"}],
                 "||", 
                RowBox[{"a", "\[LessEqual]", "0"}]}]},
              {
               FractionBox[
                RowBox[{"3", "-", 
                 RowBox[{"8", " ", "a", " ", "s"}], "+", 
                 RowBox[{"6", " ", 
                  SuperscriptBox["a", "2"], " ", 
                  SuperscriptBox["s", "2"]}]}], 
                RowBox[{"12", " ", 
                 SuperscriptBox["a", "3"]}]], 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{1.}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}},
             Selectable->True]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {
               FractionBox["1", 
                RowBox[{"60", " ", 
                 SuperscriptBox["a", "3"]}]], 
               RowBox[{
                RowBox[{"a", ">", "0"}], "&&", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "a"], "-", "s"}], "<", "0"}]}]},
              {
               RowBox[{
                RowBox[{"-", 
                 FractionBox["1", "60"]}], " ", "a", " ", 
                SuperscriptBox["s", "4"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "5"}], "+", 
                  RowBox[{"4", " ", "a", " ", "s"}]}], ")"}]}], 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{1.}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}},
             Selectable->True]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "12"], " ", 
       RowBox[{"(", 
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {
               FractionBox[
                RowBox[{"7", "-", 
                 RowBox[{"10", " ", "a", " ", "s"}]}], 
                RowBox[{"20", " ", 
                 SuperscriptBox["a", "3"]}]], 
               RowBox[{
                RowBox[{"a", ">", "0"}], "&&", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "a"], "-", "s"}], "<", "0"}]}]},
              {
               RowBox[{
                FractionBox["1", "20"], " ", "a", " ", 
                SuperscriptBox["s", "4"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "5"}], "+", 
                  RowBox[{"2", " ", "a", " ", "s"}]}], ")"}]}], 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{1.}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}},
             Selectable->True]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False], ")"}]}]}], ",", "0"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.7492983226971684`*^9, 3.7492983520569973`*^9}, 
   3.7492985455284357`*^9, 3.74929901956638*^9, 3.749299081315784*^9, 
   3.74929917406367*^9, 3.749303607732502*^9, 3.74930524346341*^9, 
   3.7493052774512177`*^9, 3.7493055037996063`*^9, 3.7493061593854427`*^9, 
   3.74930621553438*^9, 3.749322475267663*^9, 3.749323657167959*^9, 
   3.7504515376272383`*^9, 3.750539273481411*^9, 3.750539587130496*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"det1", "[", "s_", "]"}], "=", 
   RowBox[{"Det", "[", 
    RowBox[{"\[CapitalOmega]1", "[", "s", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"det2", "[", "s_", "]"}], "=", 
   RowBox[{"Det", "[", 
    RowBox[{
     RowBox[{"\[CapitalOmega]1", "[", "s", "]"}], "+", 
     RowBox[{"\[CapitalOmega]2", "[", "s", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"det3", "[", "s_", "]"}], "=", 
   RowBox[{"Det", "[", 
    RowBox[{
     RowBox[{"\[CapitalOmega]1", "[", "s", "]"}], "+", 
     RowBox[{"\[CapitalOmega]2", "[", "s", "]"}], "+", 
     RowBox[{"\[CapitalOmega]31", "[", "s", "]"}], "+", 
     RowBox[{"\[CapitalOmega]32", "[", "s", "]"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.749298440549345*^9, 3.7492984829439487`*^9}, 
   3.749298542736403*^9, {3.749299042525239*^9, 3.749299043188334*^9}, {
   3.749303600095523*^9, 3.749303617289722*^9}, {3.7493052524311323`*^9, 
   3.749305258855418*^9}, {3.749306197279879*^9, 3.749306199682061*^9}, {
   3.74930654818186*^9, 3.749306614871969*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"det1", "[", "s", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{"a", "\[Rule]", "0.1"}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"det2", "[", "s", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{"a", "\[Rule]", "0.1"}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"det3", "[", "s", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{"a", "\[Rule]", "0.1"}], "}"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "0.0", ",", "20"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<s\>\"", ",", " ", "\"\<det(\[CapitalOmega])\>\""}], "}"}]}],
    ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Determinant of \[CapitalOmega]\>\""}],
    ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<1\>\"", ",", "\"\<2\>\"", ",", "\"\<3\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.749306624329755*^9, 3.74930666376792*^9}, {
  3.74932347762317*^9, 3.749323478680393*^9}, {3.749323969334128*^9, 
  3.749324040979945*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
WIhp7A==
          "]]}, Annotation[#, "Charting`Private`Tag$337477#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVlHk4lF8bx+3Jli0xM8yMJUuyZGYeCeeOLCmlQiokWUJJ+lWyFkKSLdnK
GiKVJUtFGVmS7GRXylZKdrKU93n/OtfnOtdzzv3c9/d8qPYXjzqysbCwKLGy
sPx/TfG351J3eKC7IurpeNDTSKe2k3LwOOU6OqPaHkh6xY426t8GUSi30Rds
cW13uQwSiC0r5OmNRW/Zg3/oKTNQCvMumZOShMx0SlYWX+gj5WmHyA3nNCR9
mNe2vP4QGhJI/bfek4n2Vvz1+r7dEsnmbGasrmWjJIl+tuOytui8zpULy+Q8
dOnuce/nz86iF13DWQv6T9HCHsO1nrFzaNXt4OCscwEiz+r0Br52R+msg7eX
DYqQ6EDaXO19T7SvOUZuqacYec7IrJ0lXUXfE42qF1xK0OidnGne2esowuGv
9fxaKRJJI2s9EfFHnWvn4mbIr1Cvjl0lyghCV99LqU0XvUZxX+zSjeVDEOFe
18cp/UpkEkQPku8KQ/ZKwP7TuQoNZQtJ6GVGIrY179YFXya6ZbaYXPo1GnUN
W0guGFQjv76HsZm3YpHXU95Xcz3vUCbzmPzlTfHIJHacay69BgVKYtdNxxIQ
yavafNalFmmtrKdc6E5CTP1rM9Nrdehdf9GH83MpaNPAN/kp8gdkhZ4beIY9
Qr3MN1d+ff+ANCLY8+m1WehJTmLNz6JGxKqy5eztzTnokOeh05P6TcizuSyg
tzAXxW9+HT/h3IqypnxOdF16jkqumXheFm9DWZub9fpWCtDDSUxi3rcNFb/M
nn9WV4jc24Sd5wzaUX/ZQPg5x2Ik/LCBbbanA5X3YCsPh0rRmkBZnod2J+rJ
KG+98r4Mjd58ZDaT3omqOdwwjrJyVObsnzrt0oWaR/6K6GS8Qic1aFq/1z4h
obbly/8K3qCMxrRLP8l9aGs7MW/IsgYtJJYqfYnoQ+7hrHxG/2qQofPHkY6V
PtRYyjvmkluLfrEvW7zu7EddpqfY+jjqkabOIa3boYOo7XXYduPPDaitYJ1N
fvoLyugI+1Ej3IqE0WZbfpVhpDOR8NRtrBXt2R6nFeowjD6mWgTZ2bShyIW8
ee/2YXQ0LKPmJaMd0WI+Odrnf0VJB9Suuq50oIBGZRP10yMoUe63bcDbbpRb
VL49//4Ienom4LSITg/qSNRjl2saQbOPIjT/VPYgWWerSvHdo8hZo2KpmNmL
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
03T6
          "]]}, Annotation[#, "Charting`Private`Tag$337477#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ixzu3CeZwI53wv8BZNd6Qw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$337477#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"s\"", TraditionalForm], 
       FormBox["\"det(\[CapitalOmega])\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Determinant of \[CapitalOmega]\"", TraditionalForm], 
     PlotRange -> {{0., 20}, {-151.18245700703667`, 236.7622800417385}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"1\"", "\"2\"", "\"3\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.749298486860915*^9, {3.749298537332671*^9, 3.749298551465454*^9}, {
   3.749299030627872*^9, 3.7492990437389812`*^9}, 3.749299097019801*^9, 
   3.749299176600875*^9, 3.7493036195550756`*^9, {3.749305274739778*^9, 
   3.749305303177741*^9}, 3.749305506978207*^9, {3.7493061743176327`*^9, 
   3.749306224244939*^9}, {3.749306644045936*^9, 3.749306664688902*^9}, 
   3.749322493453747*^9, 3.749323480740559*^9, 3.749323675065954*^9, 
   3.749323974610401*^9, 3.749324043102453*^9, 3.750451554651586*^9, 
   3.750539290679213*^9, 3.750539597411169*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Single Particle Tracking", "Subsubsection",
 CellChangeTimes->{{3.750518392109581*^9, 3.750518397544827*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "s"], 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"a", " ", "\[Xi]"}]}], ")"}], "2"]], " ", 
    RowBox[{"\[DifferentialD]", "\[Xi]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7505129248649473`*^9, 3.750512964063097*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["s", 
   RowBox[{"1", "+", 
    RowBox[{"a", " ", "s"}]}]]}]], "Output",
 CellChangeTimes->{3.750512965086302*^9, 3.7505392909366083`*^9, 
  3.750539597587294*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "s"], " ", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "\[Xi]1"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"a", " ", "\[Xi]2"}]}], ")"}], "2"]], "-", 
      FractionBox["1", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"a", " ", "\[Xi]1"}]}], ")"}], "2"]]}], ")"}], " ", 
    RowBox[{"\[DifferentialD]", "\[Xi]2"}], " ", 
    RowBox[{"\[DifferentialD]", "\[Xi]1"}]}]}]}]], "Input",
 CellChangeTimes->{{3.750524766814296*^9, 3.750524864974225*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   FractionBox[
    RowBox[{"a", " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"a", " ", "s"}]}], ")"}]}], 
    RowBox[{"1", "+", 
     RowBox[{"a", " ", "s"}]}]], "-", 
   RowBox[{"2", " ", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", 
      RowBox[{"a", " ", "s"}]}], "]"}]}]}], 
  SuperscriptBox["a", "2"]]], "Output",
 CellChangeTimes->{3.750524867086595*^9, 3.750525205804496*^9, 
  3.750539291371318*^9, 3.750539598107562*^9}]
}, Open  ]],

Cell["\<\
Derive the singe particle exact formula for the linear ramp starting with the \
results from Xu\[CloseCurlyQuote]s paper.\
\>", "Text",
 CellChangeTimes->{{3.750518400728773*^9, 3.750518427095612*^9}, {
  3.750518502757475*^9, 3.750518505965467*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x0", ",", "c1", ",", "c2"}], "]"}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]", "=", 
    RowBox[{
     SqrtBox[
      RowBox[{
       SuperscriptBox["l", "2"], "-", 
       RowBox[{"1", "/", "4"}]}]], " ", 
     RowBox[{"Log", "[", "l", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"&&", 
    RowBox[{"xp0", "\[Equal]", 
     RowBox[{
      RowBox[{
       FractionBox["c1", 
        RowBox[{"2", " ", 
         SqrtBox["l"]}]], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       FractionBox["c2", 
        RowBox[{"2", " ", 
         SqrtBox["l"]}]], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x0", "\[Equal]", 
      RowBox[{
       RowBox[{"c1", " ", 
        SqrtBox["l"], " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"c2", " ", 
        SqrtBox["l"], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "&&", 
     RowBox[{"xp0", "\[Equal]", 
      RowBox[{
       RowBox[{
        FractionBox["c1", 
         SqrtBox["l"]], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "-", 
          RowBox[{
           SqrtBox[
            RowBox[{
             SuperscriptBox["l", "2"], "-", 
             RowBox[{"1", "/", "4"}]}]], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        FractionBox["c2", 
         RowBox[{"2", " ", 
          SqrtBox["l"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], "+", 
          RowBox[{
           SqrtBox[
            RowBox[{
             SuperscriptBox["l", "2"], "-", 
             RowBox[{"1", "/", "4"}]}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"c1", ",", "c2"}], "}"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.750518516654114*^9, 3.750518534948842*^9}, {
  3.750518572676383*^9, 3.7505188246967583`*^9}, {3.750519362816319*^9, 
  3.750519480309765*^9}, {3.750519536454056*^9, 3.75051961114251*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c1", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["l", "2"]}]}]], " ", "x0", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             SqrtBox[
              RowBox[{
               RowBox[{"-", 
                FractionBox["1", "4"]}], "+", 
               SuperscriptBox["l", "2"]}]], " ", 
             RowBox[{"Log", "[", "l", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x0", "-", 
             RowBox[{"4", " ", "l", " ", "xp0"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             SqrtBox[
              RowBox[{
               RowBox[{"-", 
                FractionBox["1", "4"]}], "+", 
               SuperscriptBox["l", "2"]}]], " ", 
             RowBox[{"Log", "[", "l", "]"}]}], "]"}]}]}], ")"}]}], 
       RowBox[{
        SqrtBox["l"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["l", "2"]}]}]]}], "+", 
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["l", "2"]}]}]], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["l", "2"]}]}]], " ", 
             RowBox[{"Log", "[", "l", "]"}]}], "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["l", "2"]}]}]], " ", 
            RowBox[{"Log", "[", "l", "]"}]}], "]"}]}], ")"}]}]]}]}], ",", 
    RowBox[{"c2", "\[Rule]", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SqrtBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["l", "2"]}]}]], " ", "x0"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x0", "-", 
            RowBox[{"2", " ", "l", " ", "xp0"}]}], ")"}], " ", 
          RowBox[{"Cot", "[", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "4"]}], "+", 
              SuperscriptBox["l", "2"]}]], " ", 
            RowBox[{"Log", "[", "l", "]"}]}], "]"}]}]}], ")"}], " ", 
       RowBox[{"Csc", "[", 
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "4"]}], "+", 
           SuperscriptBox["l", "2"]}]], " ", 
         RowBox[{"Log", "[", "l", "]"}]}], "]"}]}], 
      RowBox[{
       SqrtBox["l"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["l", "2"]}]}]]}], "+", 
         RowBox[{
          RowBox[{"Cot", "[", 
           RowBox[{
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "4"]}], "+", 
              SuperscriptBox["l", "2"]}]], " ", 
            RowBox[{"Log", "[", "l", "]"}]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["l", "2"]}]}]], " ", 
             RowBox[{"Cot", "[", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["1", "4"]}], "+", 
                 SuperscriptBox["l", "2"]}]], " ", 
               RowBox[{"Log", "[", "l", "]"}]}], "]"}]}]}], ")"}]}]}], 
        ")"}]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.7505193709917316`*^9, 3.750519406898827*^9}, 
   3.750519449909492*^9, 3.7505194816407013`*^9, {3.7505195990093813`*^9, 
   3.750519612808035*^9}, 3.750539292320284*^9, 3.7505395990354156`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1855, 1056},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 551, 12, 56, "Input"],
Cell[1112, 34, 322, 6, 33, "Text"],
Cell[CellGroupData[{
Cell[1459, 44, 3731, 100, 303, "Input"],
Cell[5193, 146, 2132, 53, 50, "Output"],
Cell[7328, 201, 2570, 61, 50, "Output"],
Cell[9901, 264, 2723, 65, 50, "Output"]
}, Open  ]],
Cell[12639, 332, 545, 13, 32, "Input"],
Cell[13187, 347, 576, 9, 55, "Text"],
Cell[CellGroupData[{
Cell[13788, 360, 440, 10, 78, "Input"],
Cell[14231, 372, 1019, 22, 38, "Output"],
Cell[15253, 396, 1257, 29, 50, "Output"]
}, Open  ]],
Cell[16525, 428, 181, 2, 33, "Text"],
Cell[CellGroupData[{
Cell[16731, 434, 1963, 43, 167, "Input"],
Cell[18697, 479, 1251, 25, 49, "Output"],
Cell[19951, 506, 2080, 52, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22068, 563, 7425, 235, 677, "Input"],
Cell[29496, 800, 23812, 401, 227, "Output"],
Cell[53311, 1203, 104055, 1785, 273, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157403, 2993, 297, 8, 34, "Input"],
Cell[157703, 3003, 11273, 199, 260, "Output"]
}, Open  ]],
Cell[168991, 3205, 206, 4, 33, "Text"],
Cell[CellGroupData[{
Cell[169222, 3213, 457, 10, 57, "Input"],
Cell[169682, 3225, 2581, 74, 107, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172300, 3304, 1468, 49, 95, "Input"],
Cell[173771, 3355, 889, 24, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174697, 3384, 610, 21, 68, "Input"],
Cell[175310, 3407, 984, 27, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176331, 3439, 173, 2, 35, "Subsubsection"],
Cell[176507, 3443, 269, 5, 33, "Text"],
Cell[CellGroupData[{
Cell[176801, 3452, 1453, 37, 134, "Input"],
Cell[178257, 3491, 2768, 73, 70, "Output"],
Cell[181028, 3566, 5340, 140, 76, "Output"],
Cell[186371, 3708, 10794, 286, 80, "Output"]
}, Open  ]],
Cell[197180, 3997, 1135, 29, 80, "Input"],
Cell[CellGroupData[{
Cell[198340, 4030, 1108, 31, 34, "Input"],
Cell[199451, 4063, 29269, 550, 251, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[228769, 4619, 115, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[228909, 4624, 374, 11, 57, "Input"],
Cell[229286, 4637, 206, 6, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229529, 4648, 686, 20, 58, "Input"],
Cell[230218, 4670, 504, 16, 60, "Output"]
}, Open  ]],
Cell[230737, 4689, 260, 5, 33, "Text"],
Cell[CellGroupData[{
Cell[231022, 4698, 2371, 74, 159, "Input"],
Cell[233396, 4774, 4555, 139, 109, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

